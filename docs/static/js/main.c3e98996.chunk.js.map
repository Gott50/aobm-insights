{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","minDiff","minMargin","maxAge","timeout","handleChaneOfCheckBox","index","i","event","checked","target","setState","p","playAudio","audio","play","_this2","react_default","a","createElement","className","type","value","onChange","Number","style","width","renderNames","renderRows","ref","src","_this3","componentDidMount","bind","setTimeout","console","log","paraList","items","map","id","LocalizationNameVariable","replace","concat","reduce","memo","push","length","async","fetchData","callback","_this4","fetchWithID","then","item","newData","buildData","filter","n","row","isJoung","sort","b","Date","String","catch","alert","dataRow","arguments","undefined","dataTD","toConsumableArray","key","renderRow","id_name","split","indexOf","LocalizedNames","Key","Value","fetch","response","json","_this5","dataCaerleon","e","city","bm","buildRow","c","item_id","quality","sell_price_min","caerleon","date","now","itemBlackMarket","itemCaerleon","buy_price_max","name","getLocalizedName","diff","margin","toFixed","buy_price_max_date","sell_price_min_date","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3e98996.chunk.js","sourcesContent":["import React from 'react';\nimport items from './items';\nimport * as async from \"async\";\n\nexport default class App extends React.Component {\n    state = {\n        data: [],\n        minDiff: 10000,\n        minMargin: 10,\n        maxAge: 1,\n        timeout: 10000,\n    }\n\n    constructor(props) {\n        super(props);\n        this.playAudio = () => {this.audio.play();}\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <label>minDiff:\n                    <input type=\"number\" value={this.state.minDiff} onChange={event => this.setState({minDiff: Number(event.target.value)})}/>\n                </label>\n                <label>minMargin:\n                    <input type=\"number\" value={this.state.minMargin} onChange={event => this.setState({minMargin: Number(event.target.value)})}/>\n                </label>\n                <label>maxAge:\n                    <input type=\"number\" value={this.state.maxAge} onChange={event => this.setState({maxAge: Number(event.target.value)})}/>\n                </label>\n                <label>timeout:\n                    <input type=\"number\" value={this.state.timeout} onChange={event => this.setState({timeout: Number(event.target.value)})}/>\n                </label>\n                <table style={{width: \"100%\"}}>\n                    <tbody>\n                    {this.renderNames()}\n                    {this.renderRows(this.state.data)}\n                    </tbody>\n                </table>\n                <audio ref={(audio) => {this.audio = audio;}}>\n                    <source src=\"/notification.m4a\" type=\"audio/mpeg\"/>\n                </audio>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const componentDidMount = this.componentDidMount.bind(this);\n        setTimeout(() => {\n            console.log(\"run Loop\")\n\n            let listNameIDs = items.map(i => {\n                let id = i.LocalizationNameVariable.replace(\"@ITEMS_\", \"\");\n                return `${id},${id}@1,${id}@2,${id}@3`;\n            });\n\n            let paraList = listNameIDs.reduce((memo, value, index) => {\n                if (index % 40 === 0 && index !== 0) memo.push([])\n                memo[memo.length - 1].push(value)\n                return memo\n            }, [[]]);\n            async.each(paraList, this.fetchData.bind(this), componentDidMount);\n        }, this.state.timeout);\n    }\n\n    fetchData(id, callback) {\n        this.fetchWithID(id).then(item => {\n            this.setState(p => {\n                let newData = this.buildData(item);\n                newData = newData.filter(i => !p.data.filter(n => i[8] === n[8] && i[9] === n[9]).length);\n                let pData = p.data.filter(i => !newData.filter(n => i[0] === n[0] && i[1] === n[1]).length);\n                let data = pData.concat(newData);\n                // data.sort((a, b) => b[5] - a[5]);\n\n                data = data.filter(row => Number(row[5]) >= this.state.minMargin);\n                data = data.filter(row => Number(row[4]) >= this.state.minDiff);\n                data = data.filter(row => this.isJoung(row[8]));\n\n                data.sort((a, b) => new Date(b[8]) - new Date(a[8]) || b[5] - a[5]);\n\n                if (String(p.data[0]) !== String(data[0]))\n                    this.playAudio();\n\n                return {data};\n            });\n        }).then(callback).catch(alert);\n    }\n\n\n    renderNames() {\n        return <tr>\n            <th>item_id</th>\n            <th>BQ</th>\n            <th>SQ</th>\n            <th>Name</th>\n            <th>Diff</th>\n            <th>Margin</th>\n            <th>buy_price_max</th>\n            <th>sell_price_min</th>\n            <th>buy_price_max_date</th>\n            <th>sell_price_min_date</th>\n        </tr>;\n    }\n\n    renderRow(dataRow = [], index=0) {\n        let dataTD = [...dataRow];\n        for (let i = dataRow.length - 2; i < dataRow.length; i++) {\n            dataTD[i] = <input type=\"checkbox\"\n                               checked={dataRow[i]}\n            onChange={this.handleChaneOfCheckBox(index, i).bind(this)}\n            />\n        }\n\n        return <tr key={index}>\n            {dataTD.map((data, index)=> <td key={index}>{data}</td>)}\n        </tr>;\n    }\n\n    handleChaneOfCheckBox = (index, i) => (event) => {\n        const checked = event.target.checked;\n        return this.setState(p => {\n            let data = p.data;\n            data[index][i] = checked;\n            return {data};\n        });\n    }\n\n    renderRows(dataRows = []) {\n        return dataRows.map(this.renderRow.bind(this));\n    }\n\n    getLocalizedName(id) {\n        let id_name = id.split(\"@\")[0];\n        let i = items.filter(i =>i.LocalizationNameVariable.indexOf(id_name) !== -1)[0];\n        return i && i.LocalizedNames.filter(n => n.Key === \"EN-US\")[0].Value;\n    }\n\n    async fetchWithID(id) {\n        let response = await fetch(\"https://www.albion-online-data.com/api/v2/stats/prices/\" + id +\n            \"?locations=Caerleon,Black Market&qualities=1,2,3,4,5,6\");\n        return await response.json();\n    }\n\n    buildData(data){\n        if (data.length < 2)\n            return [];\n\n        let dataCaerleon = data.filter(e => e.city === \"Caerleon\");\n        let dataBlackMarket = data.filter(e => e.city === \"Black Market\");\n\n        function caerleon(bm) {\n            let items = dataCaerleon.filter(c => c.item_id === bm.item_id && c.quality >= bm.quality);\n            items.sort((a, b) => b.sell_price_min - a.sell_price_min);\n            return items;\n        }\n\n        let result = dataBlackMarket.map(bm => this.buildRow(bm, caerleon(bm)[0]));\n        return result;\n    }\n\n    isJoung(date) {\n        return new Date(date) >= new Date(Date.now() - (2 + this.state.maxAge) * 3600 * 1000);\n    }\n\n    buildRow(itemBlackMarket, itemCaerleon) {\n        if (!itemBlackMarket || !itemCaerleon || itemBlackMarket.buy_price_max <= 0 || itemCaerleon.sell_price_min <= 0)\n            return []\n\n        let name = this.getLocalizedName(itemBlackMarket.item_id)\n        let diff = itemBlackMarket.buy_price_max - itemCaerleon.sell_price_min;\n        let margin = 100 * diff / itemBlackMarket.buy_price_max;\n\n        return [itemBlackMarket.item_id, itemBlackMarket.quality, itemCaerleon.quality, name, diff, margin.toFixed(2), itemBlackMarket.buy_price_max, itemCaerleon.sell_price_min,\n            itemBlackMarket.buy_price_max_date, itemCaerleon.sell_price_min_date, false, false]\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}